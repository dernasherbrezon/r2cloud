on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request.
  push:
    branches:
      - master
name: Main Workflow
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/ru/r2cloud/
          ~/.sonar/cache
          ~/.rvm/
        key: ${{ runner.os }}-maven
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Check license
      run: |
        sudo gem install license_finder
        license_finder

    - name: SonarCloud Scan
      run: |
        export JAVA_HOME=${JAVA_HOME_17_X64}
        mvn clean verify sonar:sonar -Pcoverage -Dsonar.scm.disabled=true -Dsonar.projectKey=ru.r2cloud:r2cloud -Dsonar.organization=dernasherbrezon-github -Dsonar.host.url=https://sonarcloud.io -Dsonar.language=java
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Run integration tests
      run: |
         cp ./target/*.deb ./target/it-tests
         docker run --rm --privileged multiarch/qemu-user-static:register
         docker build -t r2cloud ./target/it-tests
         docker run --volume /sys/fs/cgroup:/sys/fs/cgroup:ro --privileged=true --name r2cloud -d --tty r2cloud
         docker exec r2cloud /home/pi/r2cloud-tests/bin/start-tests.sh
    - name: Import GPG key
      if: github.ref == 'refs/heads/master'
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY_SHA512 }}
        passphrase: ${{ secrets.PASSPHRASE }}
    - name: Configure AWS Credentials
      if: github.ref == 'refs/heads/master'
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Deploy
      if: github.ref == 'refs/heads/master'
      run: |
        export JAVA_HOME=${JAVA_HOME_17_X64}
        cd ./target/
        [[ -f ~/.m2/repository/apt-cli-1.7.jar ]] || wget --no-clobber --quiet -O ~/.m2/repository/apt-cli-1.7.jar https://github.com/dernasherbrezon/apt-cli/releases/download/apt-cli-1.7/apt-cli.jar
        ${JAVA_HOME}/bin/java -jar ~/.m2/repository/apt-cli-1.7.jar --url s3://r2cloud --component main --codename bullseye --gpg-keyname F2DCBFDCA5A70917  save --patterns ./*.deb
        ${JAVA_HOME}/bin/java -jar ~/.m2/repository/apt-cli-1.7.jar --url s3://r2cloud --component main --codename bookworm --gpg-keyname F2DCBFDCA5A70917  save --patterns ./*.deb
        ${JAVA_HOME}/bin/java -jar ~/.m2/repository/apt-cli-1.7.jar --url s3://r2cloud --component main --codename trixie --gpg-keyname 5147FC95816E34D3  save --patterns ./*.deb
        ${JAVA_HOME}/bin/java -jar ~/.m2/repository/apt-cli-1.7.jar --url s3://r2cloud --component main --codename bionic --gpg-keyname F2DCBFDCA5A70917  save --patterns ./*.deb
        ${JAVA_HOME}/bin/java -jar ~/.m2/repository/apt-cli-1.7.jar --url s3://r2cloud --component main --codename focal --gpg-keyname F2DCBFDCA5A70917   save --patterns ./*.deb
        ${JAVA_HOME}/bin/java -jar ~/.m2/repository/apt-cli-1.7.jar --url s3://r2cloud --component main --codename jammy --gpg-keyname F2DCBFDCA5A70917   save --patterns ./*.deb
        echo "building for old OS"
        cd ..
        mvn clean
        mvn -Dmaven.test.skip=true -Djdk.version="r2cloud-jdk (>=17.0.13-1)" package
        cd ./target/
        ${JAVA_HOME}/bin/java -jar ~/.m2/repository/apt-cli-1.7.jar --url s3://r2cloud --component main --codename stretch --gpg-keyname F2DCBFDCA5A70917  save --patterns ./*.deb
        ${JAVA_HOME}/bin/java -jar ~/.m2/repository/apt-cli-1.7.jar --url s3://r2cloud --component main --codename buster --gpg-keyname F2DCBFDCA5A70917  save --patterns ./*.deb
        
        
